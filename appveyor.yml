version: 1.0.{build}

pull_requests:
  do_not_increment_build_number: true

image: Visual Studio 2017

configuration: Release

platform: x64

clone_depth: 10

environment:
  global:
    AIRCRACK_CI_CACHE: C:\aircrack_ci_cache
    CYG_CACHE: '%AIRCRACK_CI_CACHE%\cygwin'
    MSYS2_CACHE: '%AIRCRACK_CI_CACHE%\msys2'
    CHERE_INVOKING: 1
    MSYSTEM: MSYS

  matrix:
  - TARGET: cygwin
  - TARGET: cygwin64
  - TARGET: msys64

cache:
- '%AIRCRACK_CI_CACHE% -> appveyor.yml'

install:
- ps: |
    function Exec-External {
      param(
        [Parameter(Position=0,Mandatory=1)][scriptblock] $command
      )
      & $command 2>&1 | %{ "$_" }
      if ($LASTEXITCODE -ne 0) {
        throw ("Command returned non-zero error-code ${LASTEXITCODE}: $command")
      }
    }

- ps: |
    function downloadIfOlderThanDays($url, $path, $days) {
      if ( !(Test-Path $path -NewerThan (Get-Date).AddDays(-$days)) ) {
        Write-Host "$path does not exist or is older than $days days, downloading from $url"
        Invoke-WebRequest $url -OutFile $path
      }
    }

- ps: |
    function updateCygwin($cygwinexe, $installFolder, $cacheFolder) {
      Write-Host "Update Cygwin: $cygwinexe"
      Exec-External {& cmd /c $cygwinexe -gqnNdO -R $installFolder -s http://mirrors.kernel.org/sourceware/cygwin/ -l $cacheFolder -P autoconf -P automake -P bison -P clang -P gcc-core -P gcc-g++ -P mingw-runtime -P mingw-binutils -P mingw-gcc-core -P mingw-gcc-g++ -P mingw-pthreads -P mingw-w32api -P libtool -P make -P python -P gettext-devel -P gettext -P intltool -P libiconv -P libiconv-devel -P pkg-config -P git -P wget -P curl -P libcurl4 -P libpcre-devel -P openssl-devel -P libsqlite3-devel -P zlib-devel -P cmocka}
      Write-Host "Update Cygwin: $cygwinexe " -NoNewLine
      Write-Host "[ OK ]" -ForegroundColor Green
    }

- ps: |
    if ($env:TARGET -eq "cygwin") {
      New-Item -Force -Type Directory $env:CYG_CACHE

      downloadIfOlderThanDays "https://cygwin.com/setup-x86.exe" "${env:AIRCRACK_CI_CACHE}\setup-x86.exe" 7
      
      updateCygwin "${env:AIRCRACK_CI_CACHE}\setup-x86.exe" C:/cygwin $env:CYG_CACHE
    }

- ps: |
    if ($env:TARGET -eq "cygwin64") {
      New-Item -Force -Type Directory $env:CYG_CACHE

      downloadIfOlderThanDays "https://cygwin.com/setup-x86_64.exe" "${env:AIRCRACK_CI_CACHE}\setup-x86_64.exe" 7
      
      updateCygwin "${env:AIRCRACK_CI_CACHE}\setup-x86_64.exe" C:/cygwin64 $env:CYG_CACHE
    }

- ps: |
    if ($env:TARGET -eq "msys64") {
      function bash($bash_command) {
        Write-Host "MSYS2-Bash: $bash_command"
        Exec-External {& C:\msys64\usr\bin\bash.exe --login -e -c $bash_command }
        Write-Host "MSYS2-Bash $bash_command " -NoNewLine
        Write-Host "[ OK ]" -ForegroundColor Green
      }
      New-Item -Force -Type Directory $env:MSYS2_CACHE
      $unix_msys2_cache = (Exec-External {& C:\msys64\usr\bin\bash.exe --login -e -c "cygpath '${env:MSYS2_CACHE}'"})
      # install latest pacman
      bash "pacman -Sy --noconfirm --cache `"$unix_msys2_cache`" pacman pacman-mirrors"
      # update core packages
      bash "pacman -Syu --noconfirm --cache `"$unix_msys2_cache`""
      # install Aircrack-ng build dependencies
      bash "pacman --sync --noconfirm --cache `"$unix_msys2_cache`" autoconf automake1.15 libtool msys2-w32api-headers msys2-w32api-runtime pkg-config git python openssl-devel openssl libopenssl msys2-runtime-devel binutils make pcre-devel libsqlite-devel zlib-devel"
    }

build_script:
- cmd: |
    C:\cygwin\bin\bash -e -l -c "curl -RLO http://benden.us/vagrant/AirPcap_Devpack_4_1_1_1838.zip"
    C:\cygwin\bin\bash -e -l -c "7z x AirPcap_Devpack_4_1_1_1838.zip"
- ps: |
    if ($env:TARGET -eq "cygwin") {
      Exec-External {& C:\cygwin\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src"}
      Exec-External {& C:\cygwin\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-osdep"}
      Exec-External {& C:\cygwin\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-crypto"}
      Exec-External {& C:\cygwin\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-util"}
      Exec-External {& C:\cygwin\bin\bash -e -l -c "dlltool -D Airpcap_Devpack/bin/x86/airpcap.dll -d build/airpcap.dll.def -l Airpcap_Devpack/bin/x86/libairpcap.dll.a"}
      Exec-External {& C:\cygwin\bin\bash -e -l -c "./build/cygwin.sh gcc --with-experimental --with-airpcap=/cygdrive/c/projects/aircrack-ng"}
      Exec-External {& C:\cygwin\bin\bash -e -l -c "./build/cygwin.sh gcc --with-experimental"}
      Exec-External {& C:\cygwin\bin\bash -e -l -c "./build/cygwin.sh clang --with-experimental --with-airpcap=/cygdrive/c/projects/aircrack-ng"}
    }
- ps: |
    if ($env:TARGET -eq "cygwin64") {
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src"}
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src/aircrack-osdep"}
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src/aircrack-crypto"}
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src/aircrack-util"}
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "dlltool -D Airpcap_Devpack/bin/x64/airpcap.dll -d build/airpcap.dll.def -l Airpcap_Devpack/bin/x64/libairpcap.dll.a"}
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "./build/cygwin.sh gcc --with-experimental --with-airpcap=/cygdrive/c/projects/aircrack-ng"}
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "./build/cygwin.sh gcc --with-experimental"}
      Exec-External {& C:\cygwin64\bin\bash -e -l -c "./build/cygwin.sh clang --with-experimental --with-airpcap=/cygdrive/c/projects/aircrack-ng"}
    }
- ps: |
    if ($env:TARGET -eq "msys64") {
      Exec-External {& C:\msys64\usr\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src"}
      Exec-External {& C:\msys64\usr\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src/aircrack-osdep"}
      Exec-External {& C:\msys64\usr\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src/aircrack-crypto"}
      Exec-External {& C:\msys64\usr\bin\bash -e -l -c "cp -vfp Airpcap_Devpack/bin/x64/airpcap.dll src/aircrack-util"}
      Exec-External {& C:\msys64\usr\bin\bash -e -l -c "dlltool -D Airpcap_Devpack/bin/x64/airpcap.dll -d build/airpcap.dll.def -l Airpcap_Devpack/bin/x64/libairpcap.dll.a"}
      Exec-External {& C:\msys64\usr\bin\bash -e -l -c "./build/cygwin.sh gcc --disable-shared --enable-static --with-experimental --with-airpcap=/c/projects/aircrack-ng"}
      Exec-External {& C:\msys64\usr\bin\bash -e -l -c "./build/cygwin.sh gcc --disable-shared --enable-static --with-experimental"}
    }